import { licenseChecker, type ModuleInfos } from "./deps.ts";
import { denoRoot, testPackageRoot } from "./path.ts";

const getName = (name: string) => name.match(/.+?(?=@)/)![0];

let notice = `
<!-- This file is generated by generateNotice.ts, do not edit it manually -->
# Copyright Notice

This project uses the following libraries:
{{libraries}}

Thanks to the authors and contributors of these libraries for their hard work.
`.trim();

const libraries = await new Promise<ModuleInfos>((resolve, reject) => {
  licenseChecker.init({
    start: testPackageRoot,
  }, (err, ret) => {
    if (err) {
      reject(err);
    } else {
      resolve(ret);
    }
  });
});

libraries[
  Object.keys(libraries).find((name) => name.startsWith("utaformatix-data@"))!
].licenseText = await fetch(
  "https://raw.githubusercontent.com/sdercolin/utaformatix-data/main/LICENSE",
).then((res) => res.text());
libraries[
  Object.keys(libraries).find((name) => name.startsWith("utaformatix@"))!
].licenseText = await fetch(
  "https://raw.githubusercontent.com/sdercolin/utaformatix3/master/LICENSE.md",
).then((res) => res.text());

notice = notice.replace(
  "{{libraries}}",
  Object.keys(libraries).map((name) => {
    return `- ${getName(name)}`;
  }).join("\n"),
);

for (const [name, info] of Object.entries(libraries)) {
  const license = info.licenseText ||
    await Deno.readTextFile(info.licenseFile!);
  notice += `\n\n## ${getName(name)}\n\n~~~md\n${
    license.replace(/\r\n/g, "\n")
  }~~~`;
}

await Deno.writeTextFile(`${denoRoot}/NOTICE.md`, notice);
