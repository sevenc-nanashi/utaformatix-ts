import { $, licenseChecker, type ModuleInfos } from "./deps.ts";
import { denoRoot, unbundled } from "./path.ts";

const getName = (name: string) => {
  if (name.startsWith("@jsr/")) {
    const match = name.match(/@jsr\/(.+?)__(.+?)@/)!;
    return `@${match[1]}/${match[2]} (jsr)`;
  }
  return name.match(/.+?(?=@)/)![0];
};

let notice = `
<!-- This file is generated by generateNotice.ts, do not edit it manually -->
# Copyright Notice

The \`core.js\` file uses following libraries:
{{libraries}}

Thanks to the authors and contributors of these libraries for their hard work.
`.trim();

const libraries = await new Promise<ModuleInfos>((resolve, reject) => {
  licenseChecker.init(
    {
      start: unbundled,
    },
    (err, ret) => {
      if (err) {
        reject(err);
      } else {
        resolve(ret);
      }
    },
  );
});

libraries[
  Object.keys(libraries).find((name) => name.startsWith("utaformatix-core@"))!
].licenseText = await fetch(
  "https://raw.githubusercontent.com/sdercolin/utaformatix3/master/LICENSE.md",
).then((res) => res.text());

const names = new Set(Object.keys(libraries).map((name) => getName(name)));

notice = notice.replace(
  "{{libraries}}",
  [...names]
    .map((name) => {
      return `- ${name}`;
    })
    .join("\n"),
);

for (const name of names) {
  const info = libraries[
    Object.keys(libraries).find((n) => getName(n) === name)!
  ];
  const license = info.licenseText ||
    (await Deno.readTextFile(info.licenseFile!));
  notice += `\n\n## ${name}\n\n~~~md\n${license.replace(/\r\n/g, "\n")}~~~`;
}

await Deno.writeTextFile(`${denoRoot}/NOTICE.md`, notice);
await $`deno fmt ${denoRoot}/NOTICE.md`;
